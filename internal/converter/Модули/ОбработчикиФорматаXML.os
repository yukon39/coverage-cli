
Перем КешФайлов;

#Область ОбработчикиДелегатов

Функция НайтиМодульУправляемогоПриложения(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля) Экспорт
	
	ФайлОбъектаМетаданных = ПолучитьОбъектИзКеша(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля);

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ФайлОбъектаМетаданных = НайтиОбъектМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, ".");
	КонецЕсли;

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ОбработчикиФорматов.НеНайденМодульУправляемогоПриложения(ИдентификаторПрограммногоМодуля);
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ОбъединитьПути(ПутьКИсходнымФайлам, "Ext", "ManagedApplicationModule.bsl");

КонецФункции

Функция НайтиМодульСеанса(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля) Экспорт
	
	ФайлОбъектаМетаданных = ПолучитьОбъектИзКеша(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля);

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ФайлОбъектаМетаданных = НайтиОбъектМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, ".");
	КонецЕсли;
	
	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ОбработчикиФорматов.НеНайденМодульСеанса(ИдентификаторПрограммногоМодуля);
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ОбъединитьПути(ПутьКИсходнымФайлам, "Ext", "SessionModule.bsl");

КонецФункции

Функция НайтиМодульВнешнегоСоединения(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля) Экспорт
	
	ФайлОбъектаМетаданных = ПолучитьОбъектИзКеша(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля);

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ФайлОбъектаМетаданных = НайтиОбъектМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, ".");
	КонецЕсли;

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ОбработчикиФорматов.НеНайденМодульВнешнегоСоединения(ИдентификаторПрограммногоМодуля);
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ОбъединитьПути(ПутьКИсходнымФайлам, "Ext", "ExternalConnectionModule.bsl");

КонецФункции

Функция НайтиМодульОбычногоПриложения(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля) Экспорт
	
	ФайлОбъектаМетаданных = ПолучитьОбъектИзКеша(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля);

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ФайлОбъектаМетаданных = НайтиОбъектМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, ".");
	КонецЕсли;

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ОбработчикиФорматов.НеНайденМодульОбычногоПриложения(ИдентификаторПрограммногоМодуля);
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ОбъединитьПути(ПутьКИсходнымФайлам, "Ext", "OrdinaryApplicationModule.bsl");

КонецФункции

Функция НайтиОбщийМодуль(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля) Экспорт

	ФайлОбъектаМетаданных = ПолучитьОбъектИзКеша(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля);

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		КаталогиТиповОбъектовМетаданных = ОбработчикиФорматов.СписокКаталоговОбщийМодуль();
		ФайлОбъектаМетаданных = НайтиОбъектМетаданныхВКаталогах(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля,  
			КаталогиТиповОбъектовМетаданных);
	КонецЕсли;
	
	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ОбработчикиФорматов.НеНайденОбщийМодуль(ИдентификаторПрограммногоМодуля);
		Возврат Неопределено;
	КонецЕсли;

	КаталогОбъектаМетаданных = КаталогОбъектаМетаданных(ФайлОбъектаМетаданных);
	Возврат ОбъединитьПути(КаталогОбъектаМетаданных, "Ext", "Module.bsl");	

КонецФункции

Функция НайтиМодульМенеджераЗначения(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля) Экспорт
	
	ФайлОбъектаМетаданных = ПолучитьОбъектИзКеша(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля);

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ФайлОбъектаМетаданных = НайтиОбъектМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, 
			"Constants");
	КонецЕсли;

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ОбработчикиФорматов.НеНайденМодульМенеджераЗначения(ИдентификаторПрограммногоМодуля);
		Возврат Неопределено;
	КонецЕсли;
	
	КаталогОбъектаМетаданных = КаталогОбъектаМетаданных(ФайлОбъектаМетаданных);
	Возврат ОбъединитьПути(КаталогОбъектаМетаданных, "Ext", "ValueManagerModule.bsl");	

КонецФункции

Функция НайтиМодульМенеджераНастроек(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля) Экспорт
	
	ФайлОбъектаМетаданных = ПолучитьОбъектИзКеша(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля);

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ФайлОбъектаМетаданных = НайтиОбъектМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, 
			"SettingsStorages");
	КонецЕсли;

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ОбработчикиФорматов.НеНайденМодульМенеджераНастроек(ИдентификаторПрограммногоМодуля);
		Возврат Неопределено;
	КонецЕсли;
	
	КаталогОбъектаМетаданных = КаталогОбъектаМетаданных(ФайлОбъектаМетаданных);
	Возврат ОбъединитьПути(КаталогОбъектаМетаданных, "Ext", "ManagerModule.bsl");	

КонецФункции

Функция НайтиМодульМенеджера(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля) Экспорт

	ФайлОбъектаМетаданных = ПолучитьОбъектИзКеша(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля);
	
	Если ФайлОбъектаМетаданных = Неопределено Тогда
		КаталогиТиповОбъектовМетаданных = ОбработчикиФорматов.СписокКаталоговМодульМенеджера();
		ФайлОбъектаМетаданных = НайтиОбъектМетаданныхВКаталогах(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля,  
			КаталогиТиповОбъектовМетаданных);
	КонецЕсли;
	
	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ОбработчикиФорматов.НеНайденМодульМенеджера(ИдентификаторПрограммногоМодуля);
		Возврат Неопределено;
	КонецЕсли;

	КаталогОбъектаМетаданных = КаталогОбъектаМетаданных(ФайлОбъектаМетаданных);

	Возврат ОбъединитьПути(КаталогОбъектаМетаданных, "Ext", "ManagerModule.bsl");	

КонецФункции

Функция НайтиМодульОбъекта(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля) Экспорт
	
	ФайлОбъектаМетаданных = ПолучитьОбъектИзКеша(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля);

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		КаталогиТиповОбъектовМетаданных = ОбработчикиФорматов.СписокКаталоговМодульОбъекта();
		ФайлОбъектаМетаданных = НайтиОбъектМетаданныхВКаталогах(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, 
			КаталогиТиповОбъектовМетаданных);
	КонецЕсли;

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ОбработчикиФорматов.НеНайденМодульОбъекта(ИдентификаторПрограммногоМодуля);
		Возврат Неопределено;
	КонецЕсли;
	
	КаталогОбъектаМетаданных = КаталогОбъектаМетаданных(ФайлОбъектаМетаданных);
	Возврат ОбъединитьПути(КаталогОбъектаМетаданных, "Ext", "ObjectModule.bsl");	

КонецФункции

Функция НайтиМодульНабораЗаписей(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля) Экспорт
	
	ФайлОбъектаМетаданных = ПолучитьОбъектИзКеша(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля);
	
	Если ФайлОбъектаМетаданных = Неопределено Тогда
		КаталогиТиповОбъектовМетаданных = ОбработчикиФорматов.СписокКаталоговМодульНабораЗаписей();
		ФайлОбъектаМетаданных = НайтиОбъектМетаданныхВКаталогах(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, 
			КаталогиТиповОбъектовМетаданных);
	КонецЕсли;
	
	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ФайлОбъектаМетаданных = НайтиВложенныеОбъектыМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, 
			"CalculationRegisters", "Recalculations");
	КонецЕсли;

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ОбработчикиФорматов.НеНайденМодульНабораЗаписей(ИдентификаторПрограммногоМодуля);
		Возврат Неопределено;
	КонецЕсли;
	
	КаталогОбъектаМетаданных = КаталогОбъектаМетаданных(ФайлОбъектаМетаданных);
	Возврат ОбъединитьПути(КаталогОбъектаМетаданных, "Ext", "RecordSetModule.bsl");	

КонецФункции

Функция НайтиМодульФормы(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля) Экспорт
	
	ФайлОбъектаМетаданных = ПолучитьОбъектИзКеша(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля);
	
	Если ФайлОбъектаМетаданных = Неопределено Тогда
		КаталогиТиповОбъектовМетаданных = ОбработчикиФорматов.СписокКаталоговМодульФормы();
		ФайлОбъектаМетаданных = НайтиФормуВКаталогах(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля,
			КаталогиТиповОбъектовМетаданных);
	КонецЕсли;

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ФайлОбъектаМетаданных = НайтиОбъектМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, 
			"CommonForms");
	КонецЕсли;

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ОбработчикиФорматов.НеНайденМодульФормы(ИдентификаторПрограммногоМодуля);
		Возврат Неопределено;
	КонецЕсли;

	КаталогОбъектаМетаданных = КаталогОбъектаМетаданных(ФайлОбъектаМетаданных);
	Возврат ОбъединитьПути(КаталогОбъектаМетаданных, "Ext", "Form", "Module.bsl");	
	
КонецФункции

Функция НайтиМодульКоманды(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля) Экспорт
	
	ФайлОбъектаМетаданных = ПолучитьОбъектИзКеша(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля);
	
	Если ФайлОбъектаМетаданных = Неопределено Тогда
		КаталогиТиповОбъектовМетаданных = ОбработчикиФорматов.СписокКаталоговМодульКоманды();
		ФайлОбъектаМетаданных = НайтиКомандуВКаталогах(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля,
			КаталогиТиповОбъектовМетаданных);
	КонецЕсли;
	
	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ФайлОбъектаМетаданных = НайтиОбъектМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, 
			"CommonCommands");
	КонецЕсли;

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ОбработчикиФорматов.НеНайденМодульКоманды(ИдентификаторПрограммногоМодуля);
		Возврат Неопределено;
	КонецЕсли;

	КаталогОбъектаМетаданных = КаталогОбъектаМетаданных(ФайлОбъектаМетаданных);
	Возврат ОбъединитьПути(КаталогОбъектаМетаданных, "Ext", "CommandModule.bsl");	

КонецФункции

Функция НайтиВнешнийМодульОбъекта(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля) Экспорт
	
	ФайлОбъектаМетаданных = ПолучитьОбъектИзКеша(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля);

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ФайлОбъектаМетаданных = НайтиОбъектМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, ".");
	КонецЕсли;
	
	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ОбработчикиФорматов.НеНайденМодульОбъекта(ИдентификаторПрограммногоМодуля);
		Возврат Неопределено;
	КонецЕсли;

	КаталогОбъектаМетаданных = КаталогОбъектаМетаданных(ФайлОбъектаМетаданных);
	Возврат ОбъединитьПути(КаталогОбъектаМетаданных, "Ext", "ObjectModule.bsl");	

КонецФункции

Функция НайтиВнешнийМодульФормы(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля) Экспорт
	
	ФайлОбъектаМетаданных = ПолучитьОбъектИзКеша(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля);

	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ФайлОбъектаМетаданных = НайтиВложенныеОбъектыМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, 
			".", "Forms");
	КонецЕсли;
	
	Если ФайлОбъектаМетаданных = Неопределено Тогда
		ОбработчикиФорматов.НеНайденМодульФормы(ИдентификаторПрограммногоМодуля);
		Возврат Неопределено;
	КонецЕсли;

	КаталогОбъектаМетаданных = КаталогОбъектаМетаданных(ФайлОбъектаМетаданных);
	Возврат ОбъединитьПути(КаталогОбъектаМетаданных, "Ext", "Form", "Module.bsl");	

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЧтениеXMLФайлов

Функция ИдентификаторОбъектаМетаданных(ФайлОбъектаМетаданных)
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ФайлОбъектаМетаданных.ПолноеИмя);
	ЧтениеXML.ПерейтиКСодержимому();
	ЧтениеXML.Прочитать();
	ИдентификаторМетаданных = ЧтениеXML.ЗначениеАтрибута("uuid");
	ЧтениеXML.Закрыть();

	Возврат ИдентификаторМетаданных;

КонецФункции

Функция ПодчиненныеОбъектыМетаданных(ФайлОбъектаМетаданных, ЛокальноеИмяТипа)

	Результат = Новый Структура;

	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ФайлОбъектаМетаданных.ПолноеИмя);
	ЧтениеXML.ПерейтиКСодержимому();
	ЧтениеXML.Прочитать();
	ЧтениеXML.Прочитать();
	Пока ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Цикл

		Если ЧтениеXML.ЛокальноеИмя = "ChildObjects" Тогда
			
			ЧтениеXML.Прочитать();
			Пока ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Цикл
				
				Если ЧтениеXML.ЛокальноеИмя = ЛокальноеИмяТипа Тогда
					
					ИдентификаторМетаданных = ЧтениеXML.ЗначениеАтрибута("uuid");
					ИмяВложенногоОбъекта = ИмяВложенногоОбъектаXML(ЧтениеXML);
					Результат.Вставить(ИмяВложенногоОбъекта, ИдентификаторМетаданных);

				Иначе
					ЧтениеXML.Пропустить();
					ЧтениеXML.Прочитать();
				КонецЕсли;

			КонецЦикла;	
			ЧтениеXML.Прочитать();

		Иначе
			ЧтениеXML.Пропустить();
			ЧтениеXML.Прочитать();
		КонецЕсли;

	КонецЦикла;
	
	ЧтениеXML.Закрыть();

	Возврат Результат;

КонецФункции

Функция ИмяВложенногоОбъектаXML(ЧтениеXML)

	ИмяВложенногоОбъекта = Неопределено;

	ЧтениеXML.Прочитать();
	Пока ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Цикл

		Если ЧтениеXML.ЛокальноеИмя = "Properties" Тогда
			ЧтениеXML.Прочитать();
			Пока ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Цикл	
				
				Если ЧтениеXML.ЛокальноеИмя = "Name" Тогда
					ЧтениеXML.Прочитать();
					ИмяВложенногоОбъекта = ЧтениеXML.Значение;
					ЧтениеXML.Прочитать();
				Иначе
					ЧтениеXML.Пропустить();
					ЧтениеXML.Прочитать();
				КонецЕсли;	

			КонецЦикла;
			ЧтениеXML.Прочитать();
		Иначе	
			ЧтениеXML.Пропустить();
			ЧтениеXML.Прочитать();
		КонецЕсли;

	КонецЦикла;
	ЧтениеXML.Прочитать();

	Возврат ИмяВложенногоОбъекта;

КонецФункции

#КонецОбласти

Функция НайтиОбъектМетаданныхВКаталогах(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля,
	КаталогиТиповОбъектовМетаданных)

	Результат = Неопределено;

	Для Каждого КаталогТипаОбъектовМетаданных Из КаталогиТиповОбъектовМетаданных Цикл

		Результат = НайтиОбъектМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля,
			КаталогТипаОбъектовМетаданных);
		
		Если ТипЗнч(Результат) = Тип("Файл") Тогда
			Прервать;
		КонецЕсли;

	КонецЦикла;
	
	Возврат Результат;

КонецФункции

Функция НайтиФормуВКаталогах(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, КаталогиТиповОбъектовМетаданных)
	
	Результат = Неопределено;

	Для Каждого КаталогТипаОбъектовМетаданных Из КаталогиТиповОбъектовМетаданных Цикл

		Результат = НайтиВложенныеОбъектыМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, 
			КаталогТипаОбъектовМетаданных, "Forms");
		
		Если ТипЗнч(Результат) = Тип("Файл") Тогда
			Прервать;
		КонецЕсли;

	КонецЦикла;

	Возврат Результат;

КонецФункции

Функция НайтиКомандуВКаталогах(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, КаталогиТиповОбъектовМетаданных)

	Результат = Неопределено;

	Для Каждого КаталогТипаОбъектовМетаданных Из КаталогиТиповОбъектовМетаданных Цикл

		КаталогПоиска = ОбъединитьПути(ПутьКИсходнымФайлам, КаталогТипаОбъектовМетаданных);
		ФайлыОбъектовМетаданных = НайтиФайлы(КаталогПоиска, "*.xml");
		Для Каждого ФайлОбъектаМетаданных Из ФайлыОбъектовМетаданных Цикл

			Результат = НайтиПодчиненныйОбъектМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля,
				ФайлОбъектаМетаданных, "Commands", "Command");
		
			Если ТипЗнч(Результат) = Тип("Файл") Тогда
				Прервать;
			КонецЕсли;
		
		КонецЦикла;
		
		Если ТипЗнч(Результат) = Тип("Файл") Тогда
			Прервать;
		КонецЕсли;

	КонецЦикла;

	Возврат Результат;

КонецФункции

Функция НайтиВложенныеОбъектыМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, 
		ТипОбъектов, ТипПодобъектов)

	Результат = Неопределено;
	
	КаталогРегистрыРасчета = ОбъединитьПути(ПутьКИсходнымФайлам, ТипОбъектов);
	ФайлыРегистровРасчета = НайтиФайлы(КаталогРегистрыРасчета, "*.xml");
	Для Каждого ФайлРегистраРасчетов Из ФайлыРегистровРасчета Цикл

		Результат = НайтиВложенныйОбъектМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, 
			ФайлРегистраРасчетов, ТипПодобъектов);
		
		Если ТипЗнч(Результат) = Тип("Файл") Тогда
			Прервать;
		КонецЕсли;

	КонецЦикла;

	Возврат Результат;

КонецФункции

Функция НайтиОбъектМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, ПодКаталогОбъектовМетаданных)

	Результат = Неопределено;

	КаталогПоиска = ОбъединитьПути(ПутьКИсходнымФайлам, ПодКаталогОбъектовМетаданных);
	ФайлыОбъектовМетаданных = НайтиФайлы(КаталогПоиска, "*.xml");
	Для Каждого ФайлОбъектаМетаданных Из ФайлыОбъектовМетаданных Цикл
				
		ИдентификаторОбъектаМетаданных = ИдентификаторОбъектаМетаданных(ФайлОбъектаМетаданных);
		
		ДобавитьОбъектВКеш(ПутьКИсходнымФайлам, ИдентификаторОбъектаМетаданных, ФайлОбъектаМетаданных);
				
		Если ИдентификаторОбъектаМетаданных = ИдентификаторПрограммногоМодуля Тогда
			Результат = ФайлОбъектаМетаданных;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;

	Возврат Результат;

КонецФункции

Функция НайтиВложенныйОбъектМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, 
	КаталогОбъектаМетаданных, ТипПодОбъекта)

	Результат = Неопределено;

	КаталогПодОбъектов = ОбъединитьПути(КаталогОбъектаМетаданных.Путь, 
		КаталогОбъектаМетаданных.ИмяБезРасширения, 
		ТипПодОбъекта);
	
	ФайлыПодОбъектов = НайтиФайлы(КаталогПодОбъектов, "*.xml");
	Для Каждого ФайлПодОбъекта Из ФайлыПодОбъектов Цикл
		
		ИдентификаторОбъектаМетаданных = ИдентификаторОбъектаМетаданных(ФайлПодОбъекта);
		ДобавитьОбъектВКеш(ПутьКИсходнымФайлам, ИдентификаторОбъектаМетаданных, ФайлПодОбъекта);

		Если ИдентификаторОбъектаМетаданных = ИдентификаторПрограммногоМодуля Тогда
			Результат = ФайлПодОбъекта;
		КонецЕсли;

	КонецЦикла;	

	Возврат Результат;

КонецФункции

Функция НайтиПодчиненныйОбъектМетаданных(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, 
	ФайлОбъектаМетаданных, ИмяПодКаталога, ЛокальноеИмя)

	Результат = Неопределено;
	
	КаталогОбъектаМетаданных = КаталогОбъектаМетаданных(ФайлОбъектаМетаданных);
	ПодчиненныеОбъектыМетаданных = ПодчиненныеОбъектыМетаданных(ФайлОбъектаМетаданных, ЛокальноеИмя);
	
	Для Каждого КлючИЗначение Из ПодчиненныеОбъектыМетаданных Цикл

		ИдентификаторОбъектаМетаданных = КлючИЗначение.Значение;
		ИмяОбъектаМетаданных           = КлючИЗначение.Ключ; 

		ИмяКаталогаПодчиненногоОбъекта = ОбъединитьПути(КаталогОбъектаМетаданных, ИмяПодКаталога, ИмяОбъектаМетаданных);
		КаталогПодчиненногоОбъекта = Новый Файл(ИмяКаталогаПодчиненногоОбъекта);
		
		ДобавитьОбъектВКеш(ПутьКИсходнымФайлам, ИдентификаторОбъектаМетаданных, КаталогПодчиненногоОбъекта);

		Если ИдентификаторОбъектаМетаданных = ИдентификаторПрограммногоМодуля Тогда
			Результат = КаталогПодчиненногоОбъекта;
		КонецЕсли;

	КонецЦикла;
	
	Возврат Результат;

КонецФункции

Функция КаталогОбъектаМетаданных(ФайлОбъектаМетаданных)
	Возврат ОбъединитьПути(ФайлОбъектаМетаданных.Путь, ФайлОбъектаМетаданных.ИмяБезРасширения);
КонецФункции

#Область РаботаСКешем

Функция КлючКеша(ИдентификаторОбъектаМетаданных, ПутьКИсходнымФайлам)
	Возврат СтрШаблон("%1+%2", ИдентификаторОбъектаМетаданных, ПутьКИсходнымФайлам);
КонецФункции

Процедура ДобавитьОбъектВКеш(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля, ЗначениеФайл)

	КлючКеша = КлючКеша(ИдентификаторПрограммногоМодуля, ПутьКИсходнымФайлам);
	Если КешФайлов.Получить(КлючКеша) = Неопределено Тогда
		КешФайлов.Вставить(КлючКеша, ЗначениеФайл);
	КонецЕсли;

КонецПроцедуры 

Функция ПолучитьОбъектИзКеша(ПутьКИсходнымФайлам, ИдентификаторПрограммногоМодуля)
	КлючКеша = КлючКеша(ИдентификаторПрограммногоМодуля, ПутьКИсходнымФайлам);
	Возврат КешФайлов.Получить(КлючКеша);
КонецФункции

#КонецОбласти

#КонецОбласти

КешФайлов = Новый Соответствие;
