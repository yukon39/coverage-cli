#Использовать cli
#Использовать "../../../internal/cmd"

// BSLLS:LatinAndCyrillicSymbolInWord-off

#Область СлужебныйПрограммныйИнтерфейс

Функция КаталогТестовыхДанных() Экспорт
	Возврат "fixtures";
КонецФункции

Функция КаталогНастроек() Экспорт
	Возврат ОбъединитьПути(КаталогТестовыхДанных(), "configs");
КонецФункции

Функция КаталогЗамеров() Экспорт
	Возврат ОбъединитьПути(КаталогТестовыхДанных(), "coverages");
КонецФункции

Функция КаталогИсходниковКонфигурацииXML() Экспорт
	Возврат ОбъединитьПути("src", "cf", "xml");
КонецФункции

Функция КаталогИсходниковКонфигурацииEDT() Экспорт
	Возврат ОбъединитьПути("src", "cf", "edt");
КонецФункции

Функция ИмяРасширения() Экспорт
	Возврат "Расширение1";
КонецФункции

Функция ИмяФайлаВнешнегоМодуля() Экспорт
	Возврат "file://ВнешняяОбработка1.epf";
КонецФункции

Функция ЧислоСтрокРезультата(ИмяФайлаРезультатов) Экспорт
	
	ЧтениеТекста = Новый ЧтениеТекста;
	ЧтениеТекста.Открыть(ИмяФайлаРезультатов);
	ЧислоСтрок = СтрЧислоСтрок(ЧтениеТекста.Прочитать());
	ЧтениеТекста.Закрыть();
	
	Возврат ЧислоСтрок;
	
КонецФункции

Процедура ВыполнитьКомандуКонвертировать(АргументыКоманды) Экспорт
	ВыполнитьКомандуПриложения(Новый КомандаКонвертировать(), АргументыКоманды);
КонецПроцедуры

Процедура ВыполнитьКомандуСтрокиПокрытия(АргументыКоманды) Экспорт
	ВыполнитьКомандуПриложения(Новый КомандаСтрокиПокрытия(), АргументыКоманды);
КонецПроцедуры

Процедура ВыполнитьКомандуОтчетПокрытия(АргументыКоманды) Экспорт
	ВыполнитьКомандуПриложения(Новый КомандаОтчетПокрытия(), АргументыКоманды);
КонецПроцедуры

Процедура ДобавитьАргументInput(Аргументы, Значение) Экспорт
	
	Аргументы.Добавить("--input");
	Аргументы.Добавить(Значение);
	
КонецПроцедуры

Процедура ДобавитьАргументOutput(Аргументы, Значение) Экспорт
	
	Аргументы.Добавить("--output");
	Аргументы.Добавить(Значение);
	
КонецПроцедуры

Процедура ДобавитьАргументWorkspace(Аргументы, Значение) Экспорт
	
	Аргументы.Добавить("--workspace");
	Аргументы.Добавить(Значение);
	
КонецПроцедуры

Процедура ДобавитьАргументSources(Аргументы, Значение) Экспорт
	
	Аргументы.Добавить("--sources");
	Аргументы.Добавить(Значение);
	
КонецПроцедуры

Процедура ДобавитьАргументFormat(Аргументы, Значение) Экспорт
	
	Аргументы.Добавить("--format");
	Аргументы.Добавить(Значение);
	
КонецПроцедуры

Процедура ДобавитьАргументСonfig(Аргументы, Значение) Экспорт
	
	Аргументы.Добавить("--config");
	Аргументы.Добавить(Значение);
	
КонецПроцедуры

Процедура ДобавитьФлагJSON(Аргументы) Экспорт
	Аргументы.Добавить("--json");
КонецПроцедуры

Процедура ДобавитьФорматОтчета(Аргументы, Значение) Экспорт
	Аргументы.Добавить("--report");
	Аргументы.Добавить(Значение);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьКомандуПриложения(ОбъектКоманды, АргументыКоманды)
	
	Команда = Новый КомандаПриложения("testapp", "Тестовое приложения", ОбъектКоманды);
	Команда.Опция("d debug", Ложь, "Режим отладки").ТБулево();
	Команда.НачалоЗапуска();
	Команда.Запуск(АргументыКоманды);
	
КонецПроцедуры

#КонецОбласти
